name: CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create .env files
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> api/.env
        echo "DEBUG=${{ secrets.DEBUG }}" >> api/.env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> api/.env
        echo "CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}" >> api/.env
        echo "REDIS_DATABASE_URL=${{ secrets.REDIS_DATABASE_URL }}" >> api/.env
        echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> api/.env

        echo "DEBUG=${{ secrets.DEBUG }}" >> api/.env.dev
        echo "DJANGO_ENV=${{ secrets.DJANGO_ENV }}" >> api/.env.dev

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Build and start services
      run: docker compose -f api/docker-compose.yml up -d --build

    - name: Wait for web to become healthy
      run: |
        for i in {1..10}; do
          if docker logs api-web-1 2>&1 | grep -q "Starting development server at"; then
            echo "Web is ready!"
            break
          fi
          echo "Waiting for web to start..."
          sleep 5
        done

    - name: Apply Migrations
      run: |
        docker compose -f api/docker-compose.yml run --rm web python manage.py makemigrations
        docker compose -f api/docker-compose.yml run --rm web python manage.py migrate

    - name: Run Django tests
      run: docker compose -f api/docker-compose.yml exec web python manage.py test
