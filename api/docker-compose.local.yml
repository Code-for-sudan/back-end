version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: builds/prod/Dockerfile
    command: >
      sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      ./wait-for-it.sh db:3306 -- daphne -b 0.0.0.0 -p 8000 api.asgi:application"
    volumes:
      - static_volume:/api/staticfiles
      - media_volume:/api/media
    ports:
      - "8000:8000"
    expose:
      - "8000"
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: mysql:8
    container_name: mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    env_file:
      - .env.prod
    volumes:
      - db_data:/var/lib/mysql
      - ./config/mysql.cnf:/etc/mysql/conf.d/custom.cnf
      - ./mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: builds/dev/Dockerfile.celery
    container_name: celery_worker
    command: celery -A api worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
      - .env.dev

  celery_beat:
    build:
      context: .
      dockerfile: builds/dev/Dockerfile.celery
    container_name: celery_beat
    command: celery -A api beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
      - .env.dev

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  static_volume:
  media_volume:
  redis_data:
  db_data:
  esdata:
